@model ERT.Models.Product

@{
	ViewBag.Title = "Create";
}
<h2>Product</h2>
<h4>Adding new product to Shop</h4>
<hr />


@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Shop_Id)
	<div class="form-group">
		@Html.LabelFor(model => model.Product_Name, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Product_Name, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Product_Name, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-3">
			<div>
				<input type="file" id="filelist" name="filelist" />
			</div>
			@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Add Shop Item" class="btn btn-primary" />
		</div>
	</div>
</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
